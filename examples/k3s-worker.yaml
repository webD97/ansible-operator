# code: language=yaml
apiVersion: ansible.cloudbending.dev/v1alpha1
kind: PlaybookPlan
metadata:
  name: k3s-update-worker
spec:
  # An OCI image with Ansible and all required collections
  image: docker.io/serversideup/ansible-core:2.18
  # Controls when a playbook is executed
  triggers:
    # The playbook will run immediately after the resource is created or updated ...
    immediate: true
  # These host groups will be available in our playbook
  inventory:
    - name: k3s
      hosts:
        fromNodes:
          matchLabels:
            node.kubernetes.io/instance-type: k3s
  # Used to decide on a connection plugin. We will always create one Ansible (cron)job per host.
  executionStrategy:
    chroot:
  # These will usually be populated via Helm
  variables:
    inline:
      k3s_version: v1.33.1+k3s1
      k3s_checksum: sha256:0f53a0ee29c837713472e5fb0a13b5841f9dca76d029b26138364b9efbac66b1
  # The playbook will be built from this, some fields will be set automatically (vars, hosts)
  templates:
    - hosts: all
      handlers: |
        - name: Restart_k3s
          ansible.builtin.systemd:
            name: k3s.service
            state: restarted

        - name: Restorecon_k3s
          ansible.builtin.command:
            cmd: restorecon /usr/local/bin/k3s
      tasks: |
        - name: Ensure k3s {{ k3s_version }} installed
          notify: [Restart_k3s, Restorecon_k3s]
          ansible.builtin.get_url:
            url: https://github.com/k3s-io/k3s/releases/download/{{ k3s_version }}/k3s
            checksum: {{ k3s_checksum }}
            backup: true
            dest: /usr/local/bin/k3s
            owner: root
            group: root
            mode: "0755"
